name: Agent Treasury Policy Linter
description: Fails CI when agent-treasury policy guardrails are missing (allowlists, caps, timelock/quorum, pause/logging).
author: Amara-ops
branding:
  icon: shield
  color: blue
inputs:
  policy:
    description: Path to policy JSON
    required: true
  report:
    description: Path to write JSON report
    required: false
    default: policy.report.json
  strict:
    description: Treat warnings as errors
    required: false
    default: 'false'
  version:
    description: Linter ref (tag or branch) in main repo (Amara-ops/agent-guardrails-policy-linter)
    required: false
    default: main
  sarif:
    description: Optional path to write SARIF output (for GitHub Code Scanning)
    required: false
  artifact:
    description: Optional artifact path to anchor SARIF findings (defaults to policy path)
    required: false
runs:
  using: composite
  steps:
    - uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Fetch linter dist from main repo
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p .linter
        base_url="https://raw.githubusercontent.com/Amara-ops/agent-guardrails-policy-linter/${{ inputs.version }}"
        # Download compiled JS (core files)
        for f in cli.js rules.js schema.js; do
          echo "::group::Download dist/$f"
          curl -sSfL -o ".linter/$f" "$base_url/dist/$f"
          echo "::endgroup::"
        done
        # Best-effort download of SARIF module (present in newer versions).
        # Do not fail if missing (older tags like v0.1.0).
        echo "::group::Download dist/sarif.js (best-effort)"
        curl -sSL -o ".linter/sarif.js" "$base_url/dist/sarif.js" || true
        echo "::endgroup::"
        # Download JSON schema expected by schema.js at ../schema.json
        echo "::group::Download schema.json"
        curl -sSfL -o "schema.json" "$base_url/schema.json"
        echo "::endgroup::"
    - name: Install runtime deps (Ajv) and set ESM type
      shell: bash
      run: |
        set -euo pipefail
        mkdir -p .linter
        cat > .linter/package.json <<'JSON'
        {
          "name": "policy-linter-action-runtime",
          "private": true,
          "type": "module"
        }
        JSON
        npm --prefix .linter i ajv@8
    - name: Run linter
      shell: bash
      run: |
        set -euo pipefail
        STRICT_FLAG=""
        if [ "${{ inputs.strict }}" = "true" ]; then STRICT_FLAG="--strict"; fi
        SARIF_ARGS=""
        if [ -n "${{ inputs.sarif }}" ]; then
          SARIF_ARGS="--sarif \"${{ inputs.sarif }}\""
          if [ -n "${{ inputs.artifact }}" ]; then
            SARIF_ARGS="$SARIF_ARGS --artifact \"${{ inputs.artifact }}\""
          fi
        fi
        eval node .linter/cli.js "${{ inputs.policy }}" --report "${{ inputs.report }}" $STRICT_FLAG $SARIF_ARGS
